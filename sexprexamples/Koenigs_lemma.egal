(*** Generic Header ***)
Variable aSet: set -> prop.
Variable aFunction: set -> prop.
Variable Dom: set -> set.
Variable funap: set -> set -> set.
Variable iLess: set -> set -> prop.

(*** Main ***)
Definition aSubsetOf : set -> set -> prop := (fun v1 => (fun xM => ((aSet v1) /\ (forall v2, ((v2 :e v1) -> (v2 :e xM)))))).
Definition sdtbsdt : set -> set -> set := (fun xM => (fun xN => {v4 :e xM | (~ (v4 :e xN))})).
Definition sdtcflbdtrb : set -> set -> set := (fun xf => (fun xM => (some v6:set, ((aSet v6) /\ (forall v8, ((v8 :e v6) <-> (exists v7, ((v7 :e xM) /\ (v6 = (funap xf v7)))))))))).
Variable aCardinal : set -> prop.
Hypothesis H5 : (forall v9, ((aCardinal v9) -> (aSet v9))).
Variable sdtlsdt : set -> set -> prop.
Hypothesis A1: (forall xA, (forall xB, (forall xC, ((((aCardinal xA) /\ (aCardinal xB)) /\ (aCardinal xC)) -> (((sdtlsdt xA xB) /\ (sdtlsdt xB xC)) -> (sdtlsdt xA xC)))))).
Hypothesis A2: (forall xA, (forall xB, (((aCardinal xA) /\ (aCardinal xB)) -> (((sdtlsdt xA xB) \/ (sdtlsdt xB xA)) \/ (xB = xA))))).
Variable ttheCardinalityOf : set -> set.
Hypothesis H10 : (forall xM, ((aSet xM) -> (forall v10, ((v10 = (ttheCardinalityOf xM)) -> (aCardinal v10))))).
Hypothesis Image_Card: (forall xf, ((aFunction xf) -> (forall xM, ((aSubsetOf xM (Dom xf)) -> (((ttheCardinalityOf (sdtcflbdtrb xf xM)) = (ttheCardinalityOf xM)) \/ (sdtlsdt (ttheCardinalityOf (sdtcflbdtrb xf xM)) (ttheCardinalityOf xM))))))).
Hypothesis A3: (forall xN, (forall xM, (((aSet xN) /\ (aSet xM)) -> ((sdtlsdt (ttheCardinalityOf xN) (ttheCardinalityOf xM)) -> (exists v11, (v11 :e (sdtbsdt xM xN))))))).
Hypothesis Surj_Exi: (forall xM, (forall xN, (((aSet xM) /\ (aSet xN)) -> ((((ttheCardinalityOf xM) = (ttheCardinalityOf xN)) \/ (sdtlsdt (ttheCardinalityOf xM) (ttheCardinalityOf xN))) -> ((exists v12, (v12 :e xM)) -> (exists v13, ((aFunction v13) /\ ((xN = (Dom v13)) /\ (xM = (sdtcflbdtrb v13 (Dom v13))))))))))).
Hypothesis A4: (forall xA, ((aCardinal xA) -> ((ttheCardinalityOf xA) = xA))).
Definition aSequenceOfCardinalsOn : set -> set -> prop := (fun v14 => (fun xD => ((aFunction v14) /\ (((Dom v14) = xD) /\ (forall v15, ((v15 :e xD) -> (aCardinal (funap v14 v15)))))))).
Variable szSzuzmzSzeztlpdtcmdtrp : set -> set -> set.
Hypothesis H22 : (forall xD, ((aSet xD) -> (forall xkappa, ((aSequenceOfCardinalsOn xkappa xD) -> (forall v16, ((v16 = (szSzuzmzSzeztlpdtcmdtrp xkappa xD)) -> (aSet v16))))))).
Hypothesis Sum_Def: (forall xD, ((aSet xD) -> (forall xkappa, ((aSequenceOfCardinalsOn xkappa xD) -> (forall v17, ((v17 :e (szSzuzmzSzeztlpdtcmdtrp xkappa xD)) <-> (exists v18, (exists v19, (((v19 :e xD) /\ (v18 :e (funap xkappa v19))) /\ (v17 = (v18,v19))))))))))).
Definition szSzuzmlpdtcmdtrp : set -> set -> set := (fun xkappa => (fun xD => (ttheCardinalityOf (szSzuzmzSzeztlpdtcmdtrp xkappa xD)))).
Variable szPzrzozdzSzeztlpdtcmdtrp : set -> set -> set.
Hypothesis H29 : (forall xD, ((aSet xD) -> (forall xkappa, ((aSequenceOfCardinalsOn xkappa xD) -> (forall v21, ((v21 = (szPzrzozdzSzeztlpdtcmdtrp xkappa xD)) -> (aSet v21))))))).
Hypothesis Prod_Def: (forall xD, ((aSet xD) -> (forall xkappa, ((aSequenceOfCardinalsOn xkappa xD) -> (forall v22, ((v22 :e (szPzrzozdzSzeztlpdtcmdtrp xkappa xD)) <-> ((aFunction v22) /\ (((Dom v22) = xD) /\ (forall v23, ((v23 :e xD) -> ((funap v22 v23) :e (funap xkappa v23)))))))))))).
Definition szPzrzozdlpdtcmdtrp : set -> set -> set := (fun xkappa => (fun xD => (ttheCardinalityOf (szPzrzozdzSzeztlpdtcmdtrp xkappa xD)))).
Theorem Choice: (forall xD, ((aSet xD) -> (forall xlambda, ((aSequenceOfCardinalsOn xlambda xD) -> ((forall v25, ((v25 :e xD) -> (exists v26, (v26 :e (funap xlambda v25))))) -> (exists v27, (v27 :e (szPzrzozdzSzeztlpdtcmdtrp xlambda xD)))))))).
Admitted.

Theorem Koenig: (forall xD, ((aSet xD) -> (forall xkappa, (forall xlambda, (((aSequenceOfCardinalsOn xkappa xD) /\ (aSequenceOfCardinalsOn xlambda xD)) -> ((forall v28, ((v28 :e xD) -> (sdtlsdt (funap xkappa v28) (funap xlambda v28)))) -> (sdtlsdt (szSzuzmlpdtcmdtrp xkappa xD) (szPzrzozdlpdtcmdtrp xlambda xD)))))))).
Admitted.

