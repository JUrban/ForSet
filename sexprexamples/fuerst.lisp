(FORALL (DB 0) (IMPLIES (HEADTERM TAG ("aInteger" (DB 0))) TRUTH))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sz0"))) ("aInteger" (DB 0))))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sz1"))) ("aInteger" (DB 0))))
("aInteger" "xa")
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("smndt" "xa"))) ("aInteger" (DB 0))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sdtpldt" "xa" "xb")))
  ("aInteger" (DB 0))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sdtasdt" "xa" "xb")))
  ("aInteger" (DB 0))))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
("=" ("sdtpldt" "xa" ("sdtpldt" "xb" "xc"))
 ("sdtpldt" ("sdtpldt" "xa" "xb") "xc"))
(AND ("aInteger" "xa") ("aInteger" "xb"))
("=" ("sdtpldt" "xa" "xb") ("sdtpldt" "xb" "xa"))
("aInteger" "xa")
(AND ("=" ("sdtpldt" "xa" ("sz0")) "xa") ("=" "xa" ("sdtpldt" ("sz0") "xa")))
("aInteger" "xa")
(AND ("=" ("sdtpldt" "xa" ("smndt" "xa")) ("sz0"))
     ("=" ("sz0") ("sdtpldt" ("smndt" "xa") "xa")))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
("=" ("sdtasdt" "xa" ("sdtasdt" "xb" "xc"))
 ("sdtasdt" ("sdtasdt" "xa" "xb") "xc"))
(AND ("aInteger" "xa") ("aInteger" "xb"))
("=" ("sdtasdt" "xa" "xb") ("sdtasdt" "xb" "xa"))
("aInteger" "xa")
(AND ("=" ("sdtasdt" "xa" ("sz1")) "xa") ("=" "xa" ("sdtasdt" ("sz1") "xa")))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
(AND
 ("=" ("sdtasdt" "xa" ("sdtpldt" "xb" "xc"))
  ("sdtpldt" ("sdtasdt" "xa" "xb") ("sdtasdt" "xa" "xc")))
 ("=" ("sdtasdt" ("sdtpldt" "xa" "xb") "xc")
  ("sdtpldt" ("sdtasdt" "xa" "xc") ("sdtasdt" "xb" "xc"))))
("aInteger" "xa")
(AND ("=" ("sdtasdt" "xa" ("sz0")) ("sz0"))
     ("=" ("sz0") ("sdtasdt" ("sz0") "xa")))
("aInteger" "xa")
(AND ("=" ("sdtasdt" ("smndt" ("sz1")) "xa") ("smndt" "xa"))
     ("=" ("smndt" "xa") ("sdtasdt" "xa" ("smndt" ("sz1")))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(IMPLIES (AND (NOT ("=" "xa" ("sz0"))) (NOT ("=" "xb" ("sz0"))))
 (NOT ("=" ("sdtasdt" "xa" "xb") ("sz0"))))
("aInteger" "xb")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aDivisorOf" (DB 0) "xb"))
  (AND ("aInteger" (DB 0))
       (AND (NOT ("=" (DB 0) ("sz0")))
            (EXISTS (DB 0)
             (AND ("aInteger" (DB 0)) ("=" ("sdtasdt" (DB 1) (DB 0)) "xb")))))))
(AND (AND ("aInteger" "xa") ("aInteger" "xb"))
     (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IFF (HEADTERM TAG ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq"))
 ("aDivisorOf" "xq" ("sdtpldt" "xa" ("smndt" "xb"))))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
("sdteqdtlpzmzozddtrp" "xa" "xa" "xq")
(AND (AND ("aInteger" "xa") ("aInteger" "xb"))
     (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IMPLIES ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
 ("sdteqdtlpzmzozddtrp" "xb" "xa" "xq"))
("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
(AND ("aInteger" "xn")
     ("=" ("sdtasdt" "xq" "xn") ("sdtpldt" "xa" ("smndt" "xb"))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" "xq" ("smndt" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtpldt" "xa" ("smndt" "xb")))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" "xq" ("smndt" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtasdt" "xq" "xn"))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" ("smndt" ("sz1")) ("sdtasdt" "xq" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtpldt" "xa" ("smndt" "xb")))))
(AND
 (AND (AND ("aInteger" "xa") ("aInteger" "xb"))
      (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
 ("aInteger" "xc"))
(IMPLIES
 (AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
      ("sdteqdtlpzmzozddtrp" "xb" "xc" "xq"))
 ("sdteqdtlpzmzozddtrp" "xa" "xc" "xq"))
(AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
     ("sdteqdtlpzmzozddtrp" "xb" "xc" "xq"))
(AND ("aInteger" "xn")
     ("=" ("sdtasdt" "xq" "xn") ("sdtpldt" "xa" ("smndt" "xb"))))
(AND ("aInteger" "xm")
     ("=" ("sdtasdt" "xq" "xm") ("sdtpldt" "xb" ("smndt" "xc"))))
("=" ("sdtasdt" "xq" ("sdtpldt" "xn" "xm")) ("sdtpldt" "xa" ("smndt" "xc")))
(AND
 (AND (AND ("aInteger" "xa") ("aInteger" "xb"))
      (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0")))))
 (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IMPLIES ("sdteqdtlpzmzozddtrp" "xa" "xb" ("sdtasdt" "xp" "xq"))
 (AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xp")
      ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")))
("sdteqdtlpzmzozddtrp" "xa" "xb" ("sdtasdt" "xp" "xq"))
(AND ("aInteger" "xm")
     ("=" ("sdtasdt" ("sdtasdt" "xp" "xq") "xm")
      ("sdtpldt" "xa" ("smndt" "xb"))))
(AND
 ("=" ("sdtasdt" "xp" ("sdtasdt" "xq" "xm")) ("sdtpldt" "xa" ("smndt" "xb")))
 ("=" ("sdtpldt" "xa" ("smndt" "xb")) ("sdtasdt" "xq" ("sdtasdt" "xp" "xm"))))
("aInteger" "xa")
(IMPLIES (HEADTERM TAG ("isPrime" "xa")) TRUTH)
("aInteger" "xn")
(IFF (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
 (AND (NOT ("=" "xn" ("sz1"))) (NOT ("=" "xn" ("smndt" ("sz1"))))))
("aSet" "xS")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aSubsetOf" (DB 0) "xS"))
  (AND ("aSet" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1)) ("aElementOf" (DB 0) "xS"))))))
("aSet" "xS")
(IMPLIES (HEADTERM TAG ("isFinite" "xS")) TRUTH)
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("szIzNzT")))
  (AND ("aSet" (DB 0)) ("=" (DB 0) (LAMBDA (DB 0) ("aInteger" (DB 0)))))))
(AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sdtbsmnsldt" "xA" "xB")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (OR ("aElementOf" (DB 0) "xA")
                    ("aElementOf" (DB 0) "xB")))))))))
(AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sdtslmnbsdt" "xA" "xB")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (AND ("aElementOf" (DB 0) "xA")
                     ("aElementOf" (DB 0) "xB")))))))))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aFamilyOfIntegerSets" (DB 0)))
  (AND ("aSet" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1))
         ("aSubsetOf" (DB 0) ("szIzNzT")))))))
("aFamilyOfIntegerSets" "xS")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sbsmnsldt" "xS")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (EXISTS (DB 0)
                 (AND ("aElementOf" (DB 0) "xS")
                      ("aElementOf" (DB 1) (DB 0)))))))))))
("aFamilyOfIntegerSets" "xS")
("aSubsetOf" ("sbsmnsldt" "xS") ("szIzNzT"))
("aSubsetOf" "xA" ("szIzNzT"))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("stldt" "xA")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0)) (NOT ("aElementOf" (DB 0) "xA")))))))))
("aSubsetOf" "xA" ("szIzNzT"))
("aSubsetOf" ("stldt" "xA") ("szIzNzT"))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                ("sdteqdtlpzmzozddtrp" (DB 0) "xa" "xq"))))))))
("aSubsetOf" "xA" ("szIzNzT"))
(IFF (HEADTERM TAG ("isOpen" "xA"))
 (FORALL (DB 0)
  (IMPLIES ("aElementOf" (DB 0) "xA")
   (EXISTS (DB 0)
    (AND (AND ("aInteger" (DB 0)) (NOT ("=" (DB 0) ("sz0"))))
         ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" (DB 1) (DB 0)) "xA"))))))
("aSubsetOf" "xA" ("szIzNzT"))
(IFF (HEADTERM TAG ("isClosed" "xA")) ("isOpen" ("stldt" "xA")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aOpenFamily" (DB 0)))
  (AND ("aFamilyOfIntegerSets" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1)) ("isOpen" (DB 0)))))))
("aOpenFamily" "xS")
("isOpen" ("sbsmnsldt" "xS"))
("aElementOf" "xx" ("sbsmnsldt" "xS"))
(AND ("aSet" "xM") (AND ("aElementOf" "xM" "xS") ("aElementOf" "xx" "xM")))
(AND (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") "xM"))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") ("sbsmnsldt" "xS"))
(AND (AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
     (AND ("isOpen" "xA") ("isOpen" "xB")))
(AND ("aSubsetOf" ("sdtslmnbsdt" "xA" "xB") ("szIzNzT"))
     ("isOpen" ("sdtslmnbsdt" "xA" "xB")))
("aSubsetOf" ("sdtslmnbsdt" "xA" "xB") ("szIzNzT"))
("aElementOf" "xx" ("sdtslmnbsdt" "xA" "xB"))
("aInteger" "xx")
(AND (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") "xA"))
(AND (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xp") "xB"))
(AND
 (AND ("aInteger" ("sdtasdt" "xp" "xq"))
      (NOT ("=" ("sdtasdt" "xp" "xq") ("sz0"))))
 ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" ("sdtasdt" "xp" "xq"))
  ("sdtslmnbsdt" "xA" "xB")))
(AND ("aInteger" ("sdtasdt" "xp" "xq"))
     (NOT ("=" ("sdtasdt" "xp" "xq") ("sz0"))))
("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" ("sdtasdt" "xp" "xq")))
(AND ("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" "xp"))
     ("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq")))
(AND ("aInteger" "xx") ("sdteqdtlpzmzozddtrp" "xa" "xx" ("sdtasdt" "xp" "xq")))
(AND ("sdteqdtlpzmzozddtrp" "xa" "xx" "xp")
     ("sdteqdtlpzmzozddtrp" "xa" "xx" "xq"))
(AND ("aElementOf" "xa" "xA") ("aElementOf" "xa" "xB"))
("aElementOf" "xa" ("sdtslmnbsdt" "xA" "xB"))
(AND (AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
     (AND ("isClosed" "xA") ("isClosed" "xB")))
("isClosed" ("sdtbsmnsldt" "xA" "xB"))
(AND ("aSubsetOf" ("stldt" "xA") ("szIzNzT"))
     ("aSubsetOf" ("stldt" "xB") ("szIzNzT")))
("=" ("stldt" ("sdtbsmnsldt" "xA" "xB"))
 ("sdtslmnbsdt" ("stldt" "xA") ("stldt" "xB")))
(AND ("aFamilyOfIntegerSets" "xS")
     (AND ("isFinite" "xS")
          (FORALL (DB 0)
           (IMPLIES ("aElementOf" (DB 0) "xS")
            (AND ("aSubsetOf" (DB 0) ("szIzNzT")) ("isClosed" (DB 0)))))))
("isClosed" ("sbsmnsldt" "xS"))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(AND ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq") ("szIzNzT"))
     ("isClosed" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq") ("szIzNzT"))
("aElementOf" "xb" ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xb" "xq")
 ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aElementOf" "xc" ("szAzrzSzezqlpdtcmdtrp" "xb" "xq"))
(NOT ("aElementOf" "xc" ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq"))))
(AND ("sdteqdtlpzmzozddtrp" "xc" "xb" "xq")
     ("sdteqdtlpzmzozddtrp" "xa" "xc" "xq"))
("sdteqdtlpzmzozddtrp" "xb" "xa" "xq")
("aElementOf" "xb" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq"))
("aSet" "xS")
(FORALL (DB 0)
 (IFF ("aElementOf" (DB 0) "xS")
  (EXISTS (DB 0)
   (AND
    (AND ("aInteger" (DB 0))
         (AND (NOT ("=" (DB 0) ("sz0"))) ("isPrime" (DB 0))))
    ("=" (DB 1) ("szAzrzSzezqlpdtcmdtrp" ("sz0") (DB 0)))))))
(NOT ("isFinite" "xS"))
("aFamilyOfIntegerSets" "xS")
(FORALL (DB 0)
 (IFF ("aElementOf" (DB 0) ("stldt" ("sbsmnsldt" "xS")))
  (OR ("=" (DB 0) ("sz1")) ("=" (DB 0) ("smndt" ("sz1"))))))
(FORALL (DB 0)
 (IMPLIES ("aInteger" (DB 0))
  (IFF ("aElementOf" (DB 0) ("sbsmnsldt" "xS"))
   (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) (DB 1)) ("isPrime" (DB 0)))))))
("aInteger" "xn")
(IMPLIES (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
 ("aElementOf" "xn" ("sbsmnsldt" "xS")))
(EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
(AND ("aDivisorOf" "xp" "xn") ("isPrime" "xp"))
("aElementOf" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xp") "xS")
("aElementOf" "xn" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xp"))
(IMPLIES ("aElementOf" "xn" ("sbsmnsldt" "xS"))
 (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0)))))
("aElementOf" "xn" ("sbsmnsldt" "xS"))
(AND (AND ("aInteger" "xr") (AND (NOT ("=" "xr" ("sz0"))) ("isPrime" "xr")))
     ("aElementOf" "xn" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xr")))
(AND ("aDivisorOf" "xr" "xn") ("isPrime" "xr"))
("isFinite" "xS")
(AND ("isClosed" ("sbsmnsldt" "xS")) ("isOpen" ("stldt" ("sbsmnsldt" "xS"))))
(AND (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp")
      ("stldt" ("sbsmnsldt" "xS"))))
(EXISTS (DB 0)
 (AND ("aElementOf" (DB 0) ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp"))
      (AND (NOT ("=" (DB 0) ("sz1"))) (NOT ("=" (DB 0) ("smndt" ("sz1")))))))
(AND
 ("aElementOf" ("sdtpldt" ("sz1") "xp") ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp"))
 ("aElementOf" ("sdtpldt" ("sz1") ("smndt" "xp"))
  ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp")))
(AND (NOT ("=" ("sdtpldt" ("sz1") "xp") ("sz1")))
     (NOT ("=" ("sdtpldt" ("sz1") ("smndt" "xp")) ("sz1"))))
(OR (NOT ("=" ("sdtpldt" ("sz1") "xp") ("smndt" ("sz1"))))
    (NOT ("=" ("sdtpldt" ("sz1") ("smndt" "xp")) ("smndt" ("sz1")))))
(FORALL (DB 0) (IMPLIES (HEADTERM TAG ("aInteger" (DB 0))) TRUTH))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sz0"))) ("aInteger" (DB 0))))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sz1"))) ("aInteger" (DB 0))))
("aInteger" "xa")
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("smndt" "xa"))) ("aInteger" (DB 0))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sdtpldt" "xa" "xb")))
  ("aInteger" (DB 0))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(FORALL (DB 0)
 (IMPLIES (HEADTERM TAG ("=" (DB 0) ("sdtasdt" "xa" "xb")))
  ("aInteger" (DB 0))))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
("=" ("sdtpldt" "xa" ("sdtpldt" "xb" "xc"))
 ("sdtpldt" ("sdtpldt" "xa" "xb") "xc"))
(AND ("aInteger" "xa") ("aInteger" "xb"))
("=" ("sdtpldt" "xa" "xb") ("sdtpldt" "xb" "xa"))
("aInteger" "xa")
(AND ("=" ("sdtpldt" "xa" ("sz0")) "xa") ("=" "xa" ("sdtpldt" ("sz0") "xa")))
("aInteger" "xa")
(AND ("=" ("sdtpldt" "xa" ("smndt" "xa")) ("sz0"))
     ("=" ("sz0") ("sdtpldt" ("smndt" "xa") "xa")))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
("=" ("sdtasdt" "xa" ("sdtasdt" "xb" "xc"))
 ("sdtasdt" ("sdtasdt" "xa" "xb") "xc"))
(AND ("aInteger" "xa") ("aInteger" "xb"))
("=" ("sdtasdt" "xa" "xb") ("sdtasdt" "xb" "xa"))
("aInteger" "xa")
(AND ("=" ("sdtasdt" "xa" ("sz1")) "xa") ("=" "xa" ("sdtasdt" ("sz1") "xa")))
(AND (AND ("aInteger" "xa") ("aInteger" "xb")) ("aInteger" "xc"))
(AND
 ("=" ("sdtasdt" "xa" ("sdtpldt" "xb" "xc"))
  ("sdtpldt" ("sdtasdt" "xa" "xb") ("sdtasdt" "xa" "xc")))
 ("=" ("sdtasdt" ("sdtpldt" "xa" "xb") "xc")
  ("sdtpldt" ("sdtasdt" "xa" "xc") ("sdtasdt" "xb" "xc"))))
("aInteger" "xa")
(AND ("=" ("sdtasdt" "xa" ("sz0")) ("sz0"))
     ("=" ("sz0") ("sdtasdt" ("sz0") "xa")))
("aInteger" "xa")
(AND ("=" ("sdtasdt" ("smndt" ("sz1")) "xa") ("smndt" "xa"))
     ("=" ("smndt" "xa") ("sdtasdt" "xa" ("smndt" ("sz1")))))
(AND ("aInteger" "xa") ("aInteger" "xb"))
(IMPLIES (AND (NOT ("=" "xa" ("sz0"))) (NOT ("=" "xb" ("sz0"))))
 (NOT ("=" ("sdtasdt" "xa" "xb") ("sz0"))))
("aInteger" "xb")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aDivisorOf" (DB 0) "xb"))
  (AND ("aInteger" (DB 0))
       (AND (NOT ("=" (DB 0) ("sz0")))
            (EXISTS (DB 0)
             (AND ("aInteger" (DB 0)) ("=" ("sdtasdt" (DB 1) (DB 0)) "xb")))))))
(AND (AND ("aInteger" "xa") ("aInteger" "xb"))
     (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IFF (HEADTERM TAG ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq"))
 ("aDivisorOf" "xq" ("sdtpldt" "xa" ("smndt" "xb"))))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
("sdteqdtlpzmzozddtrp" "xa" "xa" "xq")
(AND (AND ("aInteger" "xa") ("aInteger" "xb"))
     (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IMPLIES ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
 ("sdteqdtlpzmzozddtrp" "xb" "xa" "xq"))
("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
(AND ("aInteger" "xn")
     ("=" ("sdtasdt" "xq" "xn") ("sdtpldt" "xa" ("smndt" "xb"))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" "xq" ("smndt" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtpldt" "xa" ("smndt" "xb")))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" "xq" ("smndt" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtasdt" "xq" "xn"))))
(EQUALITYCHAIN TAG
 ("=" ("sdtasdt" ("smndt" ("sz1")) ("sdtasdt" "xq" "xn"))
  ("sdtasdt" ("smndt" ("sz1")) ("sdtpldt" "xa" ("smndt" "xb")))))
(AND
 (AND (AND ("aInteger" "xa") ("aInteger" "xb"))
      (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
 ("aInteger" "xc"))
(IMPLIES
 (AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
      ("sdteqdtlpzmzozddtrp" "xb" "xc" "xq"))
 ("sdteqdtlpzmzozddtrp" "xa" "xc" "xq"))
(AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")
     ("sdteqdtlpzmzozddtrp" "xb" "xc" "xq"))
(AND ("aInteger" "xn")
     ("=" ("sdtasdt" "xq" "xn") ("sdtpldt" "xa" ("smndt" "xb"))))
(AND ("aInteger" "xm")
     ("=" ("sdtasdt" "xq" "xm") ("sdtpldt" "xb" ("smndt" "xc"))))
("=" ("sdtasdt" "xq" ("sdtpldt" "xn" "xm")) ("sdtpldt" "xa" ("smndt" "xc")))
(AND
 (AND (AND ("aInteger" "xa") ("aInteger" "xb"))
      (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0")))))
 (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(IMPLIES ("sdteqdtlpzmzozddtrp" "xa" "xb" ("sdtasdt" "xp" "xq"))
 (AND ("sdteqdtlpzmzozddtrp" "xa" "xb" "xp")
      ("sdteqdtlpzmzozddtrp" "xa" "xb" "xq")))
("sdteqdtlpzmzozddtrp" "xa" "xb" ("sdtasdt" "xp" "xq"))
(AND ("aInteger" "xm")
     ("=" ("sdtasdt" ("sdtasdt" "xp" "xq") "xm")
      ("sdtpldt" "xa" ("smndt" "xb"))))
(AND
 ("=" ("sdtasdt" "xp" ("sdtasdt" "xq" "xm")) ("sdtpldt" "xa" ("smndt" "xb")))
 ("=" ("sdtpldt" "xa" ("smndt" "xb")) ("sdtasdt" "xq" ("sdtasdt" "xp" "xm"))))
("aInteger" "xa")
(IMPLIES (HEADTERM TAG ("isPrime" "xa")) TRUTH)
("aInteger" "xn")
(IFF (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
 (AND (NOT ("=" "xn" ("sz1"))) (NOT ("=" "xn" ("smndt" ("sz1"))))))
("aSet" "xS")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aSubsetOf" (DB 0) "xS"))
  (AND ("aSet" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1)) ("aElementOf" (DB 0) "xS"))))))
("aSet" "xS")
(IMPLIES (HEADTERM TAG ("isFinite" "xS")) TRUTH)
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("szIzNzT")))
  (AND ("aSet" (DB 0)) ("=" (DB 0) (LAMBDA (DB 0) ("aInteger" (DB 0)))))))
(AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sdtbsmnsldt" "xA" "xB")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (OR ("aElementOf" (DB 0) "xA")
                    ("aElementOf" (DB 0) "xB")))))))))
(AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sdtslmnbsdt" "xA" "xB")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (AND ("aElementOf" (DB 0) "xA")
                     ("aElementOf" (DB 0) "xB")))))))))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aFamilyOfIntegerSets" (DB 0)))
  (AND ("aSet" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1))
         ("aSubsetOf" (DB 0) ("szIzNzT")))))))
("aFamilyOfIntegerSets" "xS")
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("sbsmnsldt" "xS")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                (EXISTS (DB 0)
                 (AND ("aElementOf" (DB 0) "xS")
                      ("aElementOf" (DB 1) (DB 0)))))))))))
("aFamilyOfIntegerSets" "xS")
("aSubsetOf" ("sbsmnsldt" "xS") ("szIzNzT"))
("aSubsetOf" "xA" ("szIzNzT"))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("stldt" "xA")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0)) (NOT ("aElementOf" (DB 0) "xA")))))))))
("aSubsetOf" "xA" ("szIzNzT"))
("aSubsetOf" ("stldt" "xA") ("szIzNzT"))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("=" (DB 0) ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
  (AND ("aSet" (DB 0))
       ("=" (DB 0)
        (LAMBDA (DB 0)
          (REPLACEMENT TAG
           (AND ("aInteger" (DB 0))
                ("sdteqdtlpzmzozddtrp" (DB 0) "xa" "xq"))))))))
("aSubsetOf" "xA" ("szIzNzT"))
(IFF (HEADTERM TAG ("isOpen" "xA"))
 (FORALL (DB 0)
  (IMPLIES ("aElementOf" (DB 0) "xA")
   (EXISTS (DB 0)
    (AND (AND ("aInteger" (DB 0)) (NOT ("=" (DB 0) ("sz0"))))
         ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" (DB 1) (DB 0)) "xA"))))))
("aSubsetOf" "xA" ("szIzNzT"))
(IFF (HEADTERM TAG ("isClosed" "xA")) ("isOpen" ("stldt" "xA")))
(FORALL (DB 0)
 (IFF (HEADTERM TAG ("aOpenFamily" (DB 0)))
  (AND ("aFamilyOfIntegerSets" (DB 0))
       (FORALL (DB 0)
        (IMPLIES ("aElementOf" (DB 0) (DB 1)) ("isOpen" (DB 0)))))))
("aOpenFamily" "xS")
("isOpen" ("sbsmnsldt" "xS"))
("aElementOf" "xx" ("sbsmnsldt" "xS"))
(AND ("aSet" "xM") (AND ("aElementOf" "xM" "xS") ("aElementOf" "xx" "xM")))
(AND (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") "xM"))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") ("sbsmnsldt" "xS"))
(AND (AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
     (AND ("isOpen" "xA") ("isOpen" "xB")))
(AND ("aSubsetOf" ("sdtslmnbsdt" "xA" "xB") ("szIzNzT"))
     ("isOpen" ("sdtslmnbsdt" "xA" "xB")))
("aSubsetOf" ("sdtslmnbsdt" "xA" "xB") ("szIzNzT"))
("aElementOf" "xx" ("sdtslmnbsdt" "xA" "xB"))
("aInteger" "xx")
(AND (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq") "xA"))
(AND (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" "xp") "xB"))
(AND
 (AND ("aInteger" ("sdtasdt" "xp" "xq"))
      (NOT ("=" ("sdtasdt" "xp" "xq") ("sz0"))))
 ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xx" ("sdtasdt" "xp" "xq"))
  ("sdtslmnbsdt" "xA" "xB")))
(AND ("aInteger" ("sdtasdt" "xp" "xq"))
     (NOT ("=" ("sdtasdt" "xp" "xq") ("sz0"))))
("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" ("sdtasdt" "xp" "xq")))
(AND ("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" "xp"))
     ("aElementOf" "xa" ("szAzrzSzezqlpdtcmdtrp" "xx" "xq")))
(AND ("aInteger" "xx") ("sdteqdtlpzmzozddtrp" "xa" "xx" ("sdtasdt" "xp" "xq")))
(AND ("sdteqdtlpzmzozddtrp" "xa" "xx" "xp")
     ("sdteqdtlpzmzozddtrp" "xa" "xx" "xq"))
(AND ("aElementOf" "xa" "xA") ("aElementOf" "xa" "xB"))
("aElementOf" "xa" ("sdtslmnbsdt" "xA" "xB"))
(AND (AND ("aSubsetOf" "xA" ("szIzNzT")) ("aSubsetOf" "xB" ("szIzNzT")))
     (AND ("isClosed" "xA") ("isClosed" "xB")))
("isClosed" ("sdtbsmnsldt" "xA" "xB"))
(AND ("aSubsetOf" ("stldt" "xA") ("szIzNzT"))
     ("aSubsetOf" ("stldt" "xB") ("szIzNzT")))
("=" ("stldt" ("sdtbsmnsldt" "xA" "xB"))
 ("sdtslmnbsdt" ("stldt" "xA") ("stldt" "xB")))
(AND ("aFamilyOfIntegerSets" "xS")
     (AND ("isFinite" "xS")
          (FORALL (DB 0)
           (IMPLIES ("aElementOf" (DB 0) "xS")
            (AND ("aSubsetOf" (DB 0) ("szIzNzT")) ("isClosed" (DB 0)))))))
("isClosed" ("sbsmnsldt" "xS"))
(AND ("aInteger" "xa") (AND ("aInteger" "xq") (NOT ("=" "xq" ("sz0")))))
(AND ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq") ("szIzNzT"))
     ("isClosed" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq") ("szIzNzT"))
("aElementOf" "xb" ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" "xb" "xq")
 ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq")))
("aElementOf" "xc" ("szAzrzSzezqlpdtcmdtrp" "xb" "xq"))
(NOT ("aElementOf" "xc" ("stldt" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq"))))
(AND ("sdteqdtlpzmzozddtrp" "xc" "xb" "xq")
     ("sdteqdtlpzmzozddtrp" "xa" "xc" "xq"))
("sdteqdtlpzmzozddtrp" "xb" "xa" "xq")
("aElementOf" "xb" ("szAzrzSzezqlpdtcmdtrp" "xa" "xq"))
("aSet" "xS")
(FORALL (DB 0)
 (IFF ("aElementOf" (DB 0) "xS")
  (EXISTS (DB 0)
   (AND
    (AND ("aInteger" (DB 0))
         (AND (NOT ("=" (DB 0) ("sz0"))) ("isPrime" (DB 0))))
    ("=" (DB 1) ("szAzrzSzezqlpdtcmdtrp" ("sz0") (DB 0)))))))
(NOT ("isFinite" "xS"))
("aFamilyOfIntegerSets" "xS")
(FORALL (DB 0)
 (IFF ("aElementOf" (DB 0) ("stldt" ("sbsmnsldt" "xS")))
  (OR ("=" (DB 0) ("sz1")) ("=" (DB 0) ("smndt" ("sz1"))))))
(FORALL (DB 0)
 (IMPLIES ("aInteger" (DB 0))
  (IFF ("aElementOf" (DB 0) ("sbsmnsldt" "xS"))
   (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) (DB 1)) ("isPrime" (DB 0)))))))
("aInteger" "xn")
(IMPLIES (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
 ("aElementOf" "xn" ("sbsmnsldt" "xS")))
(EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0))))
(AND ("aDivisorOf" "xp" "xn") ("isPrime" "xp"))
("aElementOf" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xp") "xS")
("aElementOf" "xn" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xp"))
(IMPLIES ("aElementOf" "xn" ("sbsmnsldt" "xS"))
 (EXISTS (DB 0) (AND ("aDivisorOf" (DB 0) "xn") ("isPrime" (DB 0)))))
("aElementOf" "xn" ("sbsmnsldt" "xS"))
(AND (AND ("aInteger" "xr") (AND (NOT ("=" "xr" ("sz0"))) ("isPrime" "xr")))
     ("aElementOf" "xn" ("szAzrzSzezqlpdtcmdtrp" ("sz0") "xr")))
(AND ("aDivisorOf" "xr" "xn") ("isPrime" "xr"))
("isFinite" "xS")
(AND ("isClosed" ("sbsmnsldt" "xS")) ("isOpen" ("stldt" ("sbsmnsldt" "xS"))))
(AND (AND ("aInteger" "xp") (NOT ("=" "xp" ("sz0"))))
     ("aSubsetOf" ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp")
      ("stldt" ("sbsmnsldt" "xS"))))
(EXISTS (DB 0)
 (AND ("aElementOf" (DB 0) ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp"))
      (AND (NOT ("=" (DB 0) ("sz1"))) (NOT ("=" (DB 0) ("smndt" ("sz1")))))))
(AND
 ("aElementOf" ("sdtpldt" ("sz1") "xp") ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp"))
 ("aElementOf" ("sdtpldt" ("sz1") ("smndt" "xp"))
  ("szAzrzSzezqlpdtcmdtrp" ("sz1") "xp")))
(AND (NOT ("=" ("sdtpldt" ("sz1") "xp") ("sz1")))
     (NOT ("=" ("sdtpldt" ("sz1") ("smndt" "xp")) ("sz1"))))
(OR (NOT ("=" ("sdtpldt" ("sz1") "xp") ("smndt" ("sz1"))))
    (NOT ("=" ("sdtpldt" ("sz1") ("smndt" "xp")) ("smndt" ("sz1")))))
